ststNT.kind='stst';


ststNT.parameter=[8, 0.3, 0.2, 0.1, 1000, 8,3,4];


beta = 8;
muj1 = 0.3;
muj2= 0.2;
mua = 0.1;
tau1 = 8;
tau2 = 4;
No=1000;
c3=3;
soldde= dde23(@O3SS,[tau2;tau2+c3;tau2+tau1],[100;100;100],[0,10000],[options],beta, muj1,muj2, mua,tau1,c3,tau2, No);
J1NT=soldde.y(1,end);
J2NT=soldde.y(2,end);
ANT=soldde.y(3,end);


ststNT.x=[JNT ; J2NT; ANT];


ststNT.stability=[];


indbeta=1;
indmuj1=2;
indmuj2=3;
indmua=4;
indNo=5;
indtau1=6;
indc3=7;
indtau2=8;


contpar=indexNo;


ststNT_branch1 = SetupStst(funcs,'x',[y1ster; y2ster; y3ster],'parameter',stst1.parameter,...
'contpar',contpar,'max_step',[0,1000],'min_bound',...
[contpar 0.01],'max_bound',[contpar 1000000],...
'newheuristics_tests',0);


ststNT_branch1.method.continuation.plot=0;


ststNT_branch2 = br_contn(funcs,ststNT_branch1,8000000);


ststNT_branch2=br_rvers(ststNT_branch2);


ststNT_branch3=br_contn(funcs,ststNT_branch2,1700000000);


ststNT_branch4=br_stabl(funcs,ststNT_branch3,0,1);


nunst_ststNT=GetStability(ststNT_branch4);




indfold1=find(abs(diff(nunst_ststNT))==1);


indhopf1=find(abs(diff(nunst_ststNT))==2);




ststT.kind='stst';


ststT.parameter=[8, 0.3,0.2,0.1,0.1, 8,3,4];


ststT.x=[0 ; 0; 0];


ststNT.stability=[];




ststT_branch1 = SetupStst(funcs,'x',ststT.x,'parameter',stst2.parameter,...
'contpar',contpar,'max_step',[0,1000],'min_bound',...
[contpar 0.01],'max_bound',[contpar 1000000],...
'newheuristics_tests',0);


ststT_branch1 .method.continuation.plot=0;


ststT_branch2 = br_contn(funcs,ststT_branch1 ,80000000);


ststT_branch2=br_rvers(ststT_branch2);


ststT_branch3=br_contn(funcs,ststT_branch2,80000000);


ststT_branch4=br_stabl(funcs,ststT_branch3,0,1);


nunst_ststT=GetStability(ststT_branch4);




indfold2=find(abs(diff(nunst_ststT))==1);


indhopf2=find(abs(diff(nunst_ststT))==2);




xm.field='parameter';
xm.subfield='';
xm.row=1;
xm.col=contpar;
xm.func='';


%You change this value based on what stage of the population you would like
%to plot a bifurcation diagram for.


dependentvariable=1;


magstst.field='x';
magstst.subfield='';
magstst.row=dependentvariable;
magstst.col=1;
magstst.func='';


minpsol.field='profile';
minpsol.subfield='';
minpsol.row=dependentvariable;
minpsol.col='all';
minpsol.func='min';


maxpsol.field='profile';
maxpsol.subfield='';
maxpsol.row=dependentvariable;
maxpsol.col='all';
maxpsol.func='max';


ststNTxm=br_measr(ststNT_branch4,xm);
ststNTym=br_measr(ststNT_branch4,magstst);


ststTxm=br_measr(ststT_branch4,xm);
ststTym=br_measr(ststT_branch4,magstst);




figure;


plot(ststNTxm(nunst_ststNT==0),ststNTym(nunst_ststNT==0),'g.',...
ststNTxm(nunst_ststNT>=1),ststNTym(nunst_ststNT>=1),'r.',...
ststNTxm(indfold1),ststNTym(indfold1),'mo',...
ststNTxm(indhopf1),ststNTym(indhopf1), 'bs');


hold on


plot(ststTxm(nunst_ststT==0),ststTym(nunst_ststT==0),'g.',...
ststTxm(nunst_ststT>=1),ststTym(nunst_ststT>=1),'r.',...
ststTxm(indfold2),ststTym(indfold2),'mo',...
ststTxm(indhopf2),ststTym(indhopf2), 'bs');


hold off


xlabel('N_{0}');


%You need to change this depending on what variable you would like to plot.


ylabel('J^*');


stst_lgtext={'Stable','Unstable','Fold','Hopf'};


legend(stst_lgtext,"Location","northwest","FontSize",6)


%You need to change this depending on what variable you would like to plot.
title('Steady State Bifurcation Diagram \N_{0}')
